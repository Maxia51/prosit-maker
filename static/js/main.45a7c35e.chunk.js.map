{"version":3,"sources":["static/markdown.md","static/VERSION","serviceWorker.js","Roles.js","Keywords.js","Context.js","CustomList.js","Generator.js","App.js","Version.js","NotFound.js","AppRouter.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Roles","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","animator","roles","scribe","manager","secretary","onAnimatorChange","bind","assertThisInitialized","onScribeChange","onManagerChange","onSecretaryChange","updateProps","selectNextInput","e","_this2","setState","target","value","_this3","_this4","_this5","onChange","id","refs","role2","focus","role3","role4","_this6","react_default","a","createElement","react","input","ref","addonBefore","onPressEnter","Component","Keywords","keyword","keywords","colors","addKeywords","onKeywordChange","deleteKeyword","preventDefault","concat","toConsumableArray","element","remove","array","index","indexOf","splice","map","i","tag","key","color","closable","onClick","es_form","layout","onSubmit","Item","type","es_button","htmlType","Context","context","onContextChange","title","CustomList","elements","list","onElementChange","addElements","deleteElement","elem","ordered","file","require","Generator","generateMd","addKeyword","addList","addTitle","md","forceUpdate","fetch","then","response","text","addRole","addText","component","generalization","constraints","problematics","hypothesis","actions","document","Blob","href","URL","createObjectURL","download","body","appendChild","click","replace","role","tmp","undefined","length","substring","reg","regex","arguments","listChar","size","App","onRoleChange","onKeywordsChange","onGeneralizationChange","onConstraintChange","onProblematicsChange","onHypothesisChange","onActionChange","onTitleChange","className","row","justify","align","col","span","src_Roles","src_Keywords","src_Context","src_CustomList","src_Generator","Version","version","JSON","stringify","NotFound","AppRouter","react_router_dom","react_router","path","exact","ReactDOM","render","src_AppRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45a7c35e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/markdown.a5bc912f.md\";","module.exports = __webpack_public_path__ + \"static/media/VERSION.7663d0c4.bin\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component, Fragment } from 'react'\n\nimport { Input } from 'antd';\n\nclass Roles extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            animator: this.props.roles.animator,\n            scribe:  this.props.roles.scribe,\n            manager:  this.props.roles.manager,\n            secretary:  this.props.roles.secretary,\n        };\n\n        this.onAnimatorChange = this.onAnimatorChange.bind(this);\n        this.onScribeChange = this.onScribeChange.bind(this);\n        this.onManagerChange = this.onManagerChange.bind(this);\n        this.onSecretaryChange = this.onSecretaryChange.bind(this);\n        this.updateProps = this.updateProps.bind(this);\n        this.selectNextInput = this.selectNextInput.bind(this);\n    }\n\n    onAnimatorChange(e) {\n        this.setState({\n            animator: e.target.value\n        }, () => this.updateProps())\n    }\n\n    onScribeChange(e) {\n        this.setState({\n            scribe: e.target.value\n        }, () => this.updateProps())\n    }\n\n    onManagerChange(e) {\n        this.setState({\n            manager: e.target.value\n        }, () => this.updateProps())\n    }\n\n    onSecretaryChange(e) {\n        this.setState({\n            secretary: e.target.value\n        }, () => this.updateProps())\n    }\n\n\n    updateProps(){\n        this.props.onChange(this.state);\n    }\n\n    selectNextInput(id) {\n        switch (id){\n            case 1:\n                this.refs.role2.focus();\n                break;\n            case 2:\n                this.refs.role3.focus();\n                break;\n            case 3:\n                this.refs.role4.focus();\n                break;\n            default:\n                break;\n        }\n            \n    }\n\n    render() {\n        return(\n            <Fragment>\n\n                <h2>Roles :</h2>\n\n                <Input ref={\"role1\"} addonBefore={\"Animator\"} value={this.state.animator} onChange={this.onAnimatorChange} onPressEnter={() => this.selectNextInput(1)} />\n                <Input ref={\"role2\"} addonBefore={\"Scribe\"} value={this.state.scribe} onChange={this.onScribeChange} onPressEnter={() => this.selectNextInput(2)} />\n                <Input ref={\"role3\"} addonBefore={\"Manager\"} value={this.state.manager} onChange={this.onManagerChange} onPressEnter={() => this.selectNextInput(3)} />\n                <Input ref={\"role4\"} addonBefore={\"Secretary\"} value={this.state.secretary} onChange={this.onSecretaryChange} onPressEnter={() => this.selectNextInput(4)} />\n            </Fragment>\n        );\n    }\n\n}\n\nexport default Roles;","import React, { Component, Fragment } from 'react';\n\nimport { Tag, Form, Input, Button } from 'antd';\n\nclass Keywords extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            keyword: '',\n            keywords: this.props.keywords,\n            colors: [\n                'magenta',\n                'red',\n                'volcano',\n                'orange',\n                'gold',\n                'lime',\n                'green',\n                'cyan',\n                'blue',\n                'geekblue',\n                'purple',\n            ]\n        }\n\n        this.addKeywords = this.addKeywords.bind(this);\n        this.onKeywordChange = this.onKeywordChange.bind(this);\n        this.deleteKeyword = this.deleteKeyword.bind(this);\n        this.updateProps = this.updateProps.bind(this);\n    }\n\n    onKeywordChange(e) {\n        this.setState({\n            keyword: e.target.value\n        })\n    }\n\n    addKeywords(e){\n        e.preventDefault();\n    \n        this.setState( (state) => {\n            return {\n                keywords: [...state.keywords, this.state.keyword],\n                keyword: \"\"\n            }\n        }, () => this.updateProps())\n    }\n\n    deleteKeyword(element) {\n        this.setState({\n            \n            keywords: this.remove(this.state.keywords, element)\n            \n        }, () => this.updateProps())\n    }\n\n    updateProps(){\n        this.props.onChange(this.state.keywords);\n    }\n\n    remove(array, element) {\n        const index = array.indexOf(element);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n        }\n\n        return array;\n    }\n\n    render() {\n\n        return (\n            <Fragment>\n                <h2>Keywords</h2>\n\n                {\n                    this.state.keywords.map((element, i) => {\n                        return (\n                            <Tag key={i} color={this.state.colors[i%11]} closable={true} onClick={() => this.deleteKeyword(element)}>{element}</Tag>\n                        );\n                    })\n                }\n                <Form layout={\"inline\"} onSubmit={this.addKeywords}>\n                    <Form.Item>\n                        <Input type={\"text\"} value={this.state.keyword} onChange={this.onKeywordChange} />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type={\"primary\"} htmlType={\"submit\"}>\n                            Add Keyword\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Fragment>\n        );\n    }\n}\n\nexport default Keywords;","import React, {Component, Fragment} from 'react'\nimport { Input } from 'antd';\n\nclass Context extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            context: this.props.context\n        }\n\n        this.onContextChange = this.onContextChange.bind(this);\n    }\n\n    onContextChange(e){\n        this.setState({\n            context: e.target.value\n        }, () => this.updateProps())\n    }\n\n    updateProps(){\n        this.props.onChange(this.state.context)\n    }\n\n    render(){\n        return (\n            <Fragment>\n                <h2>{this.props.title}</h2>\n                <p>{this.state.context}</p>\n                <Input type={\"text\"} onChange={this.onContextChange} />\n            </Fragment>\n        )\n    }\n}\n\nexport default Context;","import React, {Component, Fragment} from 'react'\nimport { Form, Input, Button } from 'antd';\n\nclass CustomList extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            element: '',\n            elements: this.props.list\n        }\n\n        this.onElementChange = this.onElementChange.bind(this);\n        this.addElements = this.addElements.bind(this);\n        this.deleteElement = this.deleteElement.bind(this);\n        this.updateProps = this.updateProps.bind(this);\n    }\n\n    onElementChange(e) {\n        this.setState({\n            element: e.target.value\n        })\n    }\n\n    addElements(e){\n        e.preventDefault();\n    \n        this.setState( (state) => {\n            return {\n                elements: [...state.elements, this.state.element],\n                element: \"\"\n            }\n        }, () => this.updateProps())\n    }\n\n    deleteElement(elem) {\n        this.setState({\n            \n            elements: this.remove(this.state.elements, elem)\n            \n        }, () => this.updateProps())\n    }\n\n    updateProps(){\n        this.props.onChange(this.state.elements);\n    }\n\n    remove(array, element) {\n        const index = array.indexOf(element);\n\n        if (index !== -1) {\n          array.splice(index, 1);\n        }\n\n        return array;\n    }\n\n\n    render(){\n        return(\n\n            <Fragment>\n                <h2>{this.props.title}</h2>\n\n                {\n                    this.props.ordered ? (\n                        <ol>\n                            {\n                                this.state.elements.map((element,i) => {\n                                    return <li key={i} onClick={() => this.deleteElement(element)} >{element}</li>\n                                })\n                            }\n                        </ol>\n                    ) : (\n                        <ul>\n                            {\n                                this.state.elements.map((element,i) => {\n                                    return <li key={i} onClick={() => this.deleteElement(element)} >{element}</li>\n                                })\n                            }\n                        </ul>\n                    )\n                }\n\n                \n\n                <Form layout={\"inline\"} onSubmit={this.addElements}>\n                    <Form.Item>\n                        <Input type={\"text\"} value={this.state.element} onChange={this.onElementChange} />\n                    </Form.Item>\n                    <Form.Item>\n                        <Button type={\"primary\"} htmlType={\"submit\"}>\n                            Add {this.props.title}\n                        </Button>\n                    </Form.Item>\n                </Form>\n            </Fragment>\n        );\n    }\n}\n\nexport default CustomList;","import React, {Component, Fragment} from 'react'\nimport { Button } from 'antd';\n\nlet file = require('./static/markdown.md')\n\nclass Generator extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.generateMd = this.generateMd.bind(this);\n        this.addKeyword = this.addKeyword.bind(this);\n        this.addList = this.addList.bind(this);\n        this.addTitle = this.addTitle.bind(this);\n    }\n\n    generateMd(){\n        this.forceUpdate()\n        let md;\n\n        fetch(file)\n            .then(response => {\n                return response.text()\n            })\n            .then(text => {\n                md = text;\n\n                md = this.addTitle(md);\n                md = this.addRole(md);\n                md = this.addKeyword(md);\n                md = this.addText(md, \"Context\", this.props.component.context);\n                md = this.addText(md, \"Generalization\", this.props.component.generalization);\n                md = this.addList(md, \"Constraint\", this.props.component.constraints);\n                md = this.addList(md, \"Problematics\", this.props.component.problematics);\n                md = this.addList(md, \"Hypothesis\", this.props.component.hypothesis);\n                md = this.addList(md, \"Actions\", this.props.component.actions, true);\n\n                md += '\\n';\n\n                const element = document.createElement(\"a\");\n                const file = new Blob([md], {type: 'text/plain'});\n                element.href = URL.createObjectURL(file);\n                element.download = \"prositAller.md\";\n                document.body.appendChild(element); // Required for this to work in FireFox\n                element.click();\n            })\n\n    }\n\n    addTitle(md){\n        let regex = /{Title}/gi;\n        return md.replace(regex, this.props.component.title+\"\\n\");\n    }\n\n    addRole(md){\n        let regex = /{Roles}/gi;\n\n        let role = '';\n        role += (\"* Animator: \" + this.props.component.roles.animator+\"\\n\")\n        role += (\"* Scribe: \" + this.props.component.roles.scribe+\"\\n\")\n        role += (\"* Manager: \" + this.props.component.roles.manager+\"\\n\")\n        role += (\"* Secretary: \" + this.props.component.roles.secretary)\n\n        return md.replace(regex, role)\n    }\n\n    addKeyword(md){\n        let regex = /{Kewords}/gi;\n\n        let tmp= '\\n';\n\n\n        if (this.props.component.keywords === undefined || this.props.component.keywords.length === 0) {\n            // array empty or does not exist\n            tmp += (\"* ∅\\n\");\n        } else {\n            this.props.component.keywords.map((element) => {\n                return tmp += (\"* **\"+element+\"**:\\n\");\n            })\n        }\n\n        return md.replace(regex, tmp.substring(0, tmp.length-1));\n    }\n\n    addText(md, reg, text){\n        let regex;\n\n        switch(reg){\n            case 'Context':\n                regex = /{Context}/gi;\n                break;\n            case 'Generalization':\n                regex = /{Generalization}/gi;\n                break;\n            default:\n                break;\n        }\n\n        let tmp= '\\n';\n        tmp += (\"\" +text)\n        \n        return md.replace(regex, tmp)\n    }\n\n    addList(md, reg, list, ordered = false) {\n        let regex;\n\n        switch(reg){\n            case 'Constraint':\n                regex = /{Constraint}/gi;\n                break;\n            case 'Problematics':\n                regex = /{Problematics}/gi;\n                break;\n            case 'Hypothesis':\n                regex = /{Hypothesis}/gi;\n                break;\n            case 'Actions':\n                regex = /{Actions}/gi;\n                break;\n            default:\n                break;\n        }\n\n        let tmp= '\\n';\n        let listChar = ordered ? '1.' : '*'\n\n\n        if (list === undefined || list.length === 0) {\n            // array empty or does not exist\n            tmp += (listChar+\" ∅\\n\");\n        } else {\n            list.map((element) => {\n                return tmp += (listChar+\" \"+element+\"\\n\");\n            });\n        }\n\n\n        return md.replace(regex, tmp.substring(0, tmp.length-1))\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Button type={\"primary\"} size={\"large\"} onClick={this.generateMd} >Generate Md</Button>\n            </Fragment>\n        );\n    }\n\n}\n\nexport default Generator;","import React, { Component } from 'react';\nimport { Row, Col, Input } from 'antd'\n\nimport Roles from './Roles'\nimport Keywords from './Keywords';\nimport Context from './Context';\nimport CustomList from './CustomList';\nimport Generator from './Generator';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      title: '',\n      roles: {\n        animator: \"\",\n        scribe: \"\",\n        manager: \"\",\n        secretary: \"\",\n      },\n      keywords : [],\n      context: \"\",\n      generalization: \"\",\n      constraints: [],\n      problematics: [],\n      hypothesis: [],\n      actions: [],\n\n    }\n\n    this.onRoleChange = this.onRoleChange.bind(this);\n    this.onKeywordsChange = this.onKeywordsChange.bind(this);\n    this.onContextChange = this.onContextChange.bind(this);\n    this.onGeneralizationChange = this.onGeneralizationChange.bind(this);\n    this.onConstraintChange = this.onConstraintChange.bind(this);\n    this.onProblematicsChange = this.onProblematicsChange.bind(this);\n    this.onHypothesisChange = this.onHypothesisChange.bind(this);\n    this.onActionChange = this.onActionChange.bind(this);\n    this.onTitleChange = this.onTitleChange.bind(this);\n  }\n\n  onRoleChange(value){\n    this.setState({\n      roles: value\n    })\n  }\n\n  onKeywordsChange(value){\n    this.setState({\n      keywords: value\n    })\n  }\n\n  onContextChange(value){\n    this.setState({\n      context: value\n    })\n  }\n\n  onGeneralizationChange(value){\n    this.setState({\n      generalization: value\n    })\n  }\n\n  onConstraintChange(value){\n    this.setState({\n      constraints: value\n    })\n  }\n\n  onProblematicsChange(value){\n    this.setState({\n      problematics: value\n    })\n  }\n\n  onHypothesisChange(value){\n    this.setState({\n      hypothesis: value\n    })\n  }\n\n  onActionChange(value){\n    this.setState({\n      actions: value\n    })\n  }\n\n  onTitleChange(e){\n    this.setState({\n      title: e.target.value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={5}>\n            <h1>Prosit Maker</h1>\n            <h2>{this.state.title}</h2>\n            <Input value={this.state.title} onChange={this.onTitleChange} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <Roles roles={this.state.roles} onChange={this.onRoleChange} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <Keywords keywords={this.state.keywords} onChange={this.onKeywordsChange} />\n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <Context context={this.state.context} title={\"Context\"} onChange={this.onContextChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <Context context={this.state.generalization} title={\"Generalization\"} onChange={this.onGeneralizationChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <CustomList ordered={false} list={this.state.constraints} title={\"Constraint\"} onChange={this.onConstraintChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <CustomList ordered={false} list={this.state.problematics} title={\"Problematics\"} onChange={this.onProblematicsChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <CustomList ordered={false} list={this.state.hypothesis} title={\"Hypothesis\"} onChange={this.onHypothesisChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <CustomList ordered={true} list={this.state.actions} title={\"Action Plan\"} onChange={this.onActionChange} />  \n          </Col>\n        </Row>\n        <Row type=\"flex\" justify={\"center\"} align={\"middle\"}>\n          <Col span={12}>\n            <Generator component={this.state} />\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component, Fragment } from 'react';\n\nconst file = require('./static/VERSION');\n\nclass Version extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.state = {\n            version: ''\n        }\n    }\n\n    componentDidMount(){\n        fetch(file)\n            .then(response => {\n                return response.text()\n            })\n            .then(text => {\n                this.setState({\n                    version: text\n                })\n            })\n    }\n\n    render(){\n        return (\n            <Fragment>\n                {JSON.stringify(this.state)}\n            </Fragment>\n        );\n    }\n\n}\n\nexport default Version;","import React, {Component} from 'react';\n\nimport './css/not-found-style.css'\n\nclass NotFound extends Component{\n\n    render() {\n        return (\n            <div className=\"not-found\" >\n                \n            </div>\n        );        \n    }\n\n}\n\nexport default NotFound;","import React, { Component } from 'react';\n\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport App from './App';\nimport Version from './Version';\nimport NotFound from './NotFound';\n\nclass AppRouter extends Component{\n\n\n    render(){\n        return (\n            <Router>\n                <Switch>\n                    <Route path=\"/\" exact component={App} />\n                    <Route path=\"/version\" exact component={Version} />\n                    <Route component={NotFound} />\n                </Switch>\n            </Router>\n        );\n    }\n\n}\n\nexport default AppRouter;","import React, { Fragment } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport * as serviceWorker from './serviceWorker';\nimport AppRouter from './AppRouter';\n\nReactDOM.render(\n    <Fragment>\n        <AppRouter />\n    </Fragment>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}